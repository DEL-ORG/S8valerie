# Specify the provider (AWS)
provider "aws" {
  region = "us-east-1"  # Specify the region you want the instance to be created in
}

# Define a key pair to allow SSH access to the instance
resource "aws_key_pair" "my_key_pair" {
  key_name   = "my-key"
  public_key = file("~/.ssh/id_rsa.pub")  # Use your public key
}

# Define a security group to allow inbound traffic (SSH, HTTP)
resource "aws_security_group" "my_sg" {
  name        = "allow_ssh_http"
  description = "Allow SSH and HTTP traffic"

  # Ingress rule for SSH
  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]  # Allow SSH from anywhere
  }

  # Ingress rule for HTTP
  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]  # Allow HTTP from anywhere
  }

  # Egress rule (allow all outbound traffic)
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# Define an EC2 instance
resource "aws_instance" "my_instance" {
  ami           = "ami-0c55b159cbfafe1f0"  # Amazon Linux 2 AMI in us-east-1
  instance_type = "t2.micro"               # Instance type
  key_name      = aws_key_pair.my_key_pair.key_name  # SSH key

  # Attach the security group
  vpc_security_group_ids = [aws_security_group.my_sg.id]

  # Tags for the instance
  tags = {
    Name = "MyEC2Instance"
  }
}

# Output the public IP of the instance
output "instance_public_ip" {
  value = aws_instance.my_instance.public_ip
}

terraform init

terraform plan


terraform apply

ssh -i ~/.ssh/id_rsa ec2-user@<instance-public-ip>

Sent from Yahoo Mail for iPhone

